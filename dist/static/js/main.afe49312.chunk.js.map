{"version":3,"sources":["scripts/getDate/index.ts","data/repositories/MemoRepositoryImpl/index.ts","domain/usecases/MemoService/index.ts","components/EditMemo/Memo.set.ts","scripts/arrayMove/index.ts","components/EditMemo/index.tsx","domain/entities/memo/index.ts","components/Memos/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getDate","dt","Date","year","getFullYear","month","getMonth","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ymdhms","String","slice","MemoRepositoryImpl","memos","MemoServiceImpl","mr","memoRepo","this","console","log","Promise","resolve","chrome","storage","sync","set","setMemoToStorage","a","memoService","SetMemos","result","arrayMove","arr","oldIndex","newIndex","length","k","push","undefined","splice","EditMemo","props","useState","text","setText","setDate","timeoutId","setTimeoutId","className","onChange","e","event","clearTimeout","value","target","currentTimeoutId","setTimeout","copy","memoIndex","newArray","openSnackbar","updateMemos","handleChange","Memo","id","uuid","Memos","setMemos","flag","setFlag","InitMemo","memo","setMemo","index","setIndex","snackbar","setSnackbar","useEffect","get","openMemos","handleClickDelete","stopPropagation","style","width","minHeight","height","transition","onClick","newMemo","newMemos","handleClickHeader","background","map","i","handleClick","overflow","textOverflow","whiteSpace","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAaA,EAAS,WACpB,IAAIC,EAAK,IAAIC,KACTC,EAAOF,EAAGG,cACVC,EAAQJ,EAAGK,WAAa,EACxBC,EAAON,EAAGD,UACVQ,EAAQP,EAAGQ,WACXC,EAAUT,EAAGU,aACbC,EAAUX,EAAGY,aACbC,EAAS,IAAIC,OAAOZ,GAAQ,KAAO,KAAO,IAAIY,OAAOV,IAAQW,OAAO,GAAK,KAAO,KAAO,IAAID,OAAOR,IAAOS,OAAO,GAEpH,OADAF,GAAU,KAAO,KAAO,IAAIC,OAAOP,IAAQQ,OAAO,GAAK,KAAO,KAAO,IAAID,OAAOL,IAAUM,OAAO,GAAK,KAAO,KAAO,IAAID,OAAOH,IAAUI,OAAO,I,cCNrIC,EAAb,iGACWC,QADX,KCIaC,EAAb,WAGE,WAAYC,GAAqB,yBAFjCC,cAEgC,EAC9BC,KAAKD,SAAWD,EAJpB,8FAOiBF,GAPjB,wEAQIK,QAAQC,IAAI,SAAUN,GAR1B,kBASW,IAAIO,SAAQ,SAACC,GAClBC,OAAOC,QAAQC,KAAKC,IAAI,CAACZ,UAAQ,WAC/BQ,EAAQ,kBAXhB,yGCHaK,EAAgB,uCAAG,WAAMb,GAAN,mBAAAc,EAAA,6DACxBX,EAAW,IAAIJ,EACfgB,EAAc,IAAId,EAAgBE,GACxCE,QAAQC,IAAI,MAAON,GAHW,SAITe,EAAYC,SAAShB,GAJZ,cAIxBiB,EAJwB,yBAKvBA,GALuB,2CAAH,sDCJhBC,EAAY,SAACC,EAAYC,EAAkBC,GACtD,GAAIA,GAAYF,EAAIG,OAElB,IADA,IAAIC,EAAIF,EAAWF,EAAIG,OAAS,EACzBC,KACLJ,EAAIK,UAAKC,GAIb,OADAN,EAAIO,OAAOL,EAAU,EAAGF,EAAIO,OAAON,EAAU,GAAG,IACzCD,GCQIQ,EAAmB,SAACC,GAAU,IAAD,EAChBC,mBAAiBD,EAAME,MADP,mBACjCA,EADiC,KAC3BC,EAD2B,OAEhBF,mBAAiBD,EAAMvC,MAFP,mBAE3B2C,GAF2B,aAGNH,qBAHM,mBAGjCI,EAHiC,KAGtBC,EAHsB,KA6BxC,OACE,0BAAUC,UAAU,wCAAwCC,SAAU,SAACC,GAAD,OA1BnD,SAACC,GAEhBL,GAAWM,aAAaN,GAF0C,IAI/DO,EAASF,EAAMG,OAAfD,MACDnD,EAAOP,IAEbiD,EAAQS,GACRR,EAAQ3C,GAERgB,QAAQC,IAAI,qBACZ,IAAMoC,EAAmBC,WAAU,sBAAC,8BAAA7B,EAAA,6DAC5B8B,EAD4B,YACjBhB,EAAM5B,QAElB4B,EAAMiB,WAAWf,KAAOU,EAC7BI,EAAKhB,EAAMiB,WAAWxD,KAAOA,EACvByD,EAAW5B,EAAU0B,EAAMhB,EAAMiB,UAAW,GAElDxC,QAAQC,IAAI,aAAcwC,GAPQ,SAQbjC,EAAiBiC,GARJ,OASnB,YATmB,QASRlB,EAAMmB,eAChCnB,EAAMoB,YAAYF,GAVgB,4CAWjC,KACHZ,EAAaQ,GAGgEO,CAAaZ,IAAIG,MAAOV,K,QC5C5FoB,EAKX,aAAqE,IAAzDpB,EAAwD,uDAA1C,GAAIzC,EAAsC,uDAAxB,GAAI8D,EAAoB,uDAARC,cAAQ,yBAJpEtB,UAIoE,OAHpEqB,QAGoE,OAFpE9D,UAEoE,EAClEe,KAAK0B,KAAOA,EACZ1B,KAAK+C,GAAKA,EACV/C,KAAKf,KAAOA,GC4EDgE,EA/EM,WAAO,IAAD,EACCxB,mBAAiB,IADlB,mBAClB7B,EADkB,KACXsD,EADW,OAEDzB,oBAAkB,GAFjB,mBAElB0B,EAFkB,KAEZC,EAFY,OAGD3B,mBAAe,IAAI4B,GAHlB,mBAGlBC,EAHkB,KAGZC,EAHY,OAIC9B,mBAAiB,GAJlB,mBAIlB+B,EAJkB,KAIXC,EAJW,OAKOhC,oBAAkB,GALzB,mBAKlBiC,EALkB,KAKRC,EALQ,KAOzBC,qBAAU,WACRvD,OAAOC,QAAQC,KAAKsD,IAAI,CAAC,UAAU,YAAgB,IAAbjE,EAAY,EAAZA,MACpCK,QAAQC,IAAIN,GACZsD,EAAQ,OAACtD,QAAD,IAACA,IAAS,SAEnB,IACH,IAmBMkE,EAAY,WAChBV,GAAQ,GACRb,YAAW,cAAO,MASdwB,EAAiB,uCAAG,WAAMP,EAAetB,GAArB,eAAAxB,EAAA,6DAClB8B,EADkB,YACP5C,IACZ0B,OAAOkC,EAAO,GACnBtB,EAAM8B,kBAHkB,SAIlBvD,EAAiB+B,GAJC,OAKxBU,EAASV,GALe,2CAAH,wDAOvB,OACE,mCACE,sBAAKT,UAAU,WAAWkC,MAAO,CAAEC,MAAO,IAAKC,UAAW,IAAKC,OAAQ,KAAvE,UACE,sBAAKrC,UAAWoB,EAAO,iFAAmF,0FAA2Fc,MAAO,CAAEI,WAAY,gCAA1N,UAA6PlB,EAAO,wBAAQmB,QAAS,kBAAMR,KAAvB,gCAAmD,6CAAU,wBAAQQ,QAAS,kBAnC9T,WACxB,GAAInB,EACFW,QACK,CACL,IAAM7E,EAAOP,IACP6F,EAAU,IAAIlB,EAAS,GAAIpE,GACjCsE,EAAQgB,GACR,IAAMC,EAAQ,sBAAO5E,GAAP,CAAc2E,IAC5B9D,EAAiB+D,GACjBtB,EAASsB,GACTf,EAAS7D,EAAMsB,QACfkC,GAAQ,IAwBkVqB,IAAvB,SAA6CtB,EAAO,eAAO,oBAC5X,qBAAKpB,UAAW2B,EAAW,qCAAuC,wCAAyCO,MAAO,CAAEI,WAAY,0BAAhI,SAA6JX,EAAW,UAAU,KAClL,qBAAK3B,UAAWoB,EAAO,0CAA4C,oCAAnE,SACGA,EACC,cAAC,EAAD,CAAUvD,MAAOA,EAAO8B,KAAM4B,EAAK5B,KAAMzC,KAAMqE,EAAKrE,KAAM8D,GAAIO,EAAKP,GAAIN,UAAWe,EAAOZ,YAAaM,EAAUP,aArBrG,WACnBgB,GAAY,GACZA,GAAY,GACZpB,YAAW,WACToB,GAAY,KACX,QAkBK,qBAAK5B,UAAU,sBAAsBkC,MAAO,CAAES,WAAY,WAA1D,SACI9E,GAASA,EAAMsB,OAAS,EAAKtB,EAAM+E,KAAI,SAACrB,EAAMsB,GAC9C,OACE,sBAAK7C,UAAU,iDAAiDuC,QAAS,kBAjDrE,SAAChB,EAAYE,GAC/BD,EAAQD,GACRG,EAASD,GACTJ,GAAQ,GA8CqFyB,CAAYvB,EAAMsB,IAAjG,UACE,mBAAG7C,UAAU,uBAAuBkC,MAAO,CAACa,SAAU,SAAUV,OAAQ,QAASW,aAAc,WAAYC,WAAY,UAAvH,SAAmI1B,EAAK5B,OACxI,sBAAKK,UAAU,uBAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8BuB,EAAKrE,OACnC,wBAAQ8C,UAAU,iCAAiCuC,QAAS,SAACrC,GAAD,OAAK8B,EAAkBa,EAAE3C,IAArF,yCAIH,mBAAGF,UAAU,kBAAb,2CCtEJkD,MAJf,WACE,OAAO,cAAC,EAAD,KCUMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.afe49312.chunk.js","sourcesContent":["export const getDate =()=> {\n  var dt = new Date();\n  var year = dt.getFullYear();\n  var month = dt.getMonth() + 1;\n  var date = dt.getDate();\n  var hours = dt.getHours();\n  var minutes = dt.getMinutes();\n  var seconds = dt.getSeconds();\n  var ymdhms = new String(year) + \"/\" + (\"00\" + new String(month)).slice(-2) + \"/\" + (\"00\" + new String(date)).slice(-2);\n  ymdhms += \" \" + (\"00\" + new String(hours)).slice(-2) + \":\" + (\"00\" + new String(minutes)).slice(-2) + \":\" + (\"00\" + new String(seconds)).slice(-2);\n  return ymdhms;\n}\n","import { MemoRepository } from 'domain/repositories/MemoRepository'\nimport { Memo } from 'types/Memo'\n\nexport class MemoRepositoryImpl implements MemoRepository {\n  SetMemos(memos: Memo[]): void {}\n}","import { Memo } from \"types/Memo\";\nimport {MemoRepository} from 'domain/repositories/MemoRepository'\n\ninterface MemoService {\n  SetMemos(memos: Memo[]): void\n}\n\nexport class MemoServiceImpl implements MemoService {\n  memoRepo: MemoRepository\n\n  constructor(mr: MemoRepository) {\n    this.memoRepo = mr\n  }\n\n  async SetMemos(memos: Memo[]): Promise<'success'> {\n    console.log('in set', memos)\n    return new Promise((resolve)=>{\n      chrome.storage.sync.set({memos}, ()=>{\n        resolve('success')\n      })\n    })\n  }\n}","import { MemoRepositoryImpl } from \"data/repositories/MemoRepositoryImpl\"\nimport { MemoServiceImpl } from \"domain/usecases/MemoService\"\nimport { Memo } from \"types/Memo\"\n\nexport const setMemoToStorage = async(memos:Memo[]) => {\n  const memoRepo = new MemoRepositoryImpl()\n  const memoService = new MemoServiceImpl(memoRepo)\n  console.log('aaa', memos)\n  const result = await memoService.SetMemos(memos)\n  return result\n}","export const arrayMove = (arr: any[], oldIndex: number, newIndex: number) => {\n  if (newIndex >= arr.length) {\n    var k = newIndex - arr.length + 1;\n    while (k--) {\n      arr.push(undefined);\n    }\n  }\n  arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  return arr;\n}","import { Memo } from 'types/Memo';\nimport React, { Dispatch, FC, SetStateAction, useState } from 'react';\nimport { getDate } from 'scripts/getDate';\nimport { setMemoToStorage } from './Memo.set';\nimport { arrayMove } from 'scripts/arrayMove';\n\ninterface Props {\n  text: string\n  id: string\n  date: string\n  memoIndex: number\n  memos: Memo[]\n  updateMemos: Dispatch<SetStateAction<Memo[]>>\n  openSnackbar: ()=>void\n}\n\nexport const EditMemo:FC<Props>=(props)=> {\n  const [text, setText] = useState<string>(props.text)\n  const [date, setDate] = useState<string>(props.date)\n  const [timeoutId, setTimeoutId] = useState<NodeJS.Timeout>()\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    // 値が保存されてなければsetTimeoutを解除\n    if (timeoutId) clearTimeout(timeoutId)\n\n    const {value} = event.target\n    const date = getDate()\n\n    setText(value)\n    setDate(date)\n    // 1秒後に自動保存\n    console.log('before setTimeout')\n    const currentTimeoutId = setTimeout(async()=> {\n      const copy = [...props.memos]\n\n      copy[props.memoIndex].text = value\n      copy[props.memoIndex].date = date\n      const newArray = arrayMove(copy, props.memoIndex, 0)\n\n      console.log('settimeout', newArray)\n      const result = await setMemoToStorage(newArray)\n      if (result === 'success') props.openSnackbar()\n      props.updateMemos(newArray)\n    }, 1000)\n    setTimeoutId(currentTimeoutId)\n  }\n  return (\n    <textarea className=\"bg-black text-white p-4 h-full w-full\" onChange={(e) => handleChange(e)} value={text}></textarea>\n  )\n}\n","import {v4 as uuid} from 'uuid'\n\nexport class Memo {\n  text: string\n  id: string\n  date: string\n\n  constructor(text:string = '', date:string = '', id:string = uuid()) {\n    this.text = text\n    this.id = id\n    this.date = date\n  }\n}","import { EditMemo } from 'components/EditMemo';\nimport { setMemoToStorage } from 'components/EditMemo/Memo.set';\nimport { Memo as InitMemo } from 'domain/entities/memo';\nimport React, { useEffect, useState } from 'react';\nimport { getDate } from 'scripts/getDate';\nimport { Memo } from 'types/Memo';\n\nexport const Memos = () => {\n  const [memos, setMemos] = useState<Memo[]>([])\n  const [flag, setFlag] = useState<boolean>(false)\n  const [memo, setMemo] = useState<Memo>(new InitMemo())\n  const [index, setIndex] = useState<number>(0)\n  const [snackbar, setSnackbar] = useState<boolean>(false)\n  // const memoMock = [{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0},{text: 'memo', date: '2020/11/11', id: 0}]\n  useEffect(() => {\n    chrome.storage.sync.get(['memos'], ({ memos }) => {\n      console.log(memos)\n      setMemos(memos ?? [])\n    })\n  }, [])\n  const handleClick = (memo: Memo, index: number) => {\n    setMemo(memo)\n    setIndex(index)\n    setFlag(true)\n  }\n  const handleClickHeader = () => {\n    if (flag) {\n      openMemos()\n    } else {\n      const date = getDate()\n      const newMemo = new InitMemo('', date)\n      setMemo(newMemo)\n      const newMemos = [...memos, newMemo]\n      setMemoToStorage(newMemos)\n      setMemos(newMemos)\n      setIndex(memos.length)\n      setFlag(true)\n    }\n  }\n  const openMemos = () => {\n    setFlag(false)\n    setTimeout(()=>{},1000)\n  }\n  const openSnackbar = () => {\n    setSnackbar(false)\n    setSnackbar(true)\n    setTimeout(() => {\n      setSnackbar(false)\n    }, 1000)\n  }\n  const handleClickDelete = async(index: number, event: React.MouseEvent) => {\n    const copy = [...memos]\n    copy.splice(index, 1)\n    event.stopPropagation()\n    await setMemoToStorage(copy)\n    setMemos(copy)\n  }\n  return (\n    <>\n      <div className=\"bg-black\" style={{ width: 350, minHeight: 600, height: 600 }}>\n        <div className={flag ? \"text-yellow-400 px-2 pt-2 font-bold fixed bg-black w-full flex justify-between\" : \"text-white px-2 pt-2 pb-6 font-bold text-2xl fixed bg-black w-full flex justify-between\"} style={{ transition: 'font-size 300ms, color 300ms' }}>{flag ? <button onClick={() => openMemos()}>＜メモ</button> : <p>メモ</p>}<button onClick={() => handleClickHeader()}>{flag ? '完了' : '📝'}</button></div>\n        <div className={snackbar ? \"top-2 left-1/2 fixed text-gray-400\" : \"top-0 left-1/2 fixed text-transparent\"} style={{ transition: 'color 400ms, top 400ms' }}>{snackbar ? 'saved!!':''}</div>\n        <div className={flag ? \"w-full pt-10 pb-20 px-2 bg-black h-full\" : \"w-full py-20 px-2 bg-black h-full\"}>\n          {flag ?\n            <EditMemo memos={memos} text={memo.text} date={memo.date} id={memo.id} memoIndex={index} updateMemos={setMemos} openSnackbar={openSnackbar}></EditMemo>\n            :\n            <div className=\"w-full px-7 rounded\" style={{ background: '#202020' }}>\n              {(memos && memos.length > 0) ? memos.map((memo, i) => {\n                return (\n                  <div className=\"py-1 border-b-2 border-gray-800 cursor-pointer\" onClick={() => handleClick(memo, i)}>\n                    <p className=\"text-white font-bold\" style={{overflow: 'hidden', height: '1.8em', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>{memo.text}</p>\n                    <div className=\"flex justify-between\">\n                      <p className=\"text-gray-400\">{memo.date}</p>\n                      <button className=\"hover:bg-gray-600 rounded px-1\" onClick={(e)=>handleClickDelete(i,e)}>🗑️</button>\n                    </div>\n                  </div>\n                )\n              }) : <p className=\"text-white py-2\">please give me memo</p>}\n            </div>\n          }\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Memos;\n","import Memos from 'components/Memos';\nimport React from 'react';\n\nfunction App() {\n  return <Memos/>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}